version: 2.1

workflows:
    version: 2.1
    build-test-deploy:
        jobs:
            - checkout
            - install_sonarqube
            - dependancies_backend:
                requires:
                    - checkout           
            - build_backend:
                requires:
                    - dependancies_backend
            - test_backend:
                requires:
                    - build_backend
            - dependancies_frontend:
                requires:
                    - checkout           
            - lint_frontend:
                requires:
                    - dependancies_frontend
            - test_frontend:
                requires:
                    - dependancies_frontend
            - sonar_backend:
                requires:
                    - checkout
                    - install_sonarqube
            - sonar_frontend:
                requires:
                    - checkout
                    - install_sonarqube            

executors:
    python:
        docker:
            - image: python
    java:
        docker:
            - image: circleci/openjdk:8-jdk
        environment:
            MAVEN_OPTS: -Xmx3200m
            SOURCE_PATH: kwetter_backend
    node:
        docker:
            - image: circleci/node:10.15.3
        environment:
            SOURCE_PATH: kwetter_angular

commands:
    attach_workspace_:
        steps:
            - attach_workspace:
                at: .
    persist_workspace_:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - kwetter_backend
                    - kwetter_angular
    persist_workspace_sonar:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - sonar-scanner-3.3.0.1492-linux
    run_sonar:
        parameters:
            path:
                type: string
                default: .
            server_location:
                type: string
                default: http://377c37dc.ngrok.io
        steps:
            - run:
                name: Run Sonarqube scanner
                command: |
                    cd $SOURCE_PATH
                    export SONAR_SCANNER_OPTS="-Xmx2048m"
                    eval ./../sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner -Dsonar.projectKey=${SOURCE_PATH}_CommandTest \
                    -Dsonar.sources=. \
                    -Dsonar.sourceEncoding=US-ASCII \
                    -Dsonar.exclusions=vendor/bundle/** \
                    -Dsonar.host.url=<< parameters.server_location >> \
                    -Dsonar.projectVersion=${CIRCLE_BRANCH} \                                                   

jobs:
    checkout:
        executor: python
        steps:
            - checkout
            - persist_workspace_
    
    install_sonarqube:
        executor: python
        steps:
            - run:
                name: Install Sonarqube scanner
                command: |
                    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
                    unzip sonar-scanner-cli-3.3.0.1492-linux.zip    
            - persist_workspace_sonar

    sonar_frontend:
        executor: node
        steps:
            - attach_workspace_
            - run_sonar:
                path: $SOURCE_PATH

    sonar_backend:
        executor: java
        steps:
            - attach_workspace_
            - run_sonar:
                path: $SOURCE_PATH      

    dependancies_backend:
        executor: java
        steps:
            - attach_workspace_
            - run:
                name: Maven Go-Offline
                command: cd $SOURCE_PATH && mvn dependency:go-offline     
            - persist_workspace_
    
    dependancies_frontend:
        executor: node
        steps:
            - attach_workspace_
            - run:
                name: Install local dependencies
                command: cd $SOURCE_PATH && npm install
            - persist_workspace_

    build_backend:
        executor: java
        steps:
            - attach_workspace_
            - run:
                name: Build Backend
                command: cd $SOURCE_PATH && mvn install -DskipTests              
            - persist_workspace_

    lint_frontend:
        executor: node
        steps:
            - attach_workspace_
            # Disabled for testing purposes
            # - run:
            #     name: Linting
            #     command: cd $SOURCE_PATH && npm run lint
            - persist_workspace_

    test_frontend:
        executor: node
        steps:
            - attach_workspace_
            # Disabled for testing purposes
            # - run:
            #     name: Testing
            #     command: cd $SOURCE_PATH && npm run test
            - persist_workspace_

    test_backend:
        executor: java
        steps:
            - attach_workspace_
            - run:
                name: Test Backend
                command: cd $SOURCE_PATH && mvn surefire:test              
            - persist_workspace_