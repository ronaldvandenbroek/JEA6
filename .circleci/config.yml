version: 2.1

orbs:
    aws-cli: circleci/aws-cli@0.1.13

workflows:
    build-test-deploy:
        jobs:
            - checkout:
                filters:
                    branches:
                        only:
                            - master
                            - release
                            - development
                            - feature-deploy

            - dependencies_backend:
                requires:
                    - checkout
            - dependencies_frontend:
                requires:
                    - checkout

            - build_backend:
                requires:
                    - dependencies_backend
            - build_frontend:
                requires:
                    - dependencies_frontend

            - test_backend:
                requires:
                    - build_backend
            - lint_frontend:
                requires:
                    - build_frontend
            - test_frontend:
                requires:
                    - build_frontend

            - sonarqube:
                context:
                    kwetter                
                requires:
                    - test_backend
                    - test_frontend
                    - lint_frontend

            - docker_backend:
                context:
                    kwetter
                requires:
                    - sonarqube

            - docker_frontend:
                context:
                    kwetter
                requires:
                    - sonarqube

            - aws-deploy:
                context:
                    kwetter
                requires:
                    - docker_backend
                    - docker_frontend

executors:
    python:
        docker:
            - image: python

    java:
        docker:
            - image: circleci/openjdk:8-jdk
        environment:
            MAVEN_OPTS: -Xmx3200m
            SOURCE_PATH: kwetter_backend

    node:
        docker:
            - image: circleci/node:10.15.3
        environment:
            SOURCE_PATH: kwetter_angular

commands:
    skip:
        steps:
            - run:
                name: Skip
                command: ls

    attach_workspace_all:
        steps:
            - attach_workspace:
                at: .

    persist_workspace_angular_dist:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - kwetter_angular/dist

    persist_workspace_angular:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - kwetter_angular   
#                     Find a way to exclude node_modules

    persist_workspace_backend:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - kwetter_backend                                   

    persist_workspace_backend_tests:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - kwetter_backend/target

    persist_workspace_sonar:
        steps:
            - persist_to_workspace:
                root: .
                paths:
                    - sonar-scanner-3.3.0.1492-linux

    run_docker:
        parameters:
            user:
                type: string
                default: .
            pass:
                type: string
                default: .
            source:
                type: string
                default: .  
            tag:         
                type: string
                default: .                                      
        steps:   
            - run:
                name: Docker Login
                command: docker login -u << parameters.user >> -p << parameters.pass >>
            - run:
                name: Docker Build
                command: docker build -t << parameters.user >>/<< parameters.source >>:<< parameters.tag >> ./project/<< parameters.source >>
            - run:
                name: Docker Push
                command: docker push << parameters.user >>/<< parameters.source >>:<< parameters.tag >>

    restore_cache_backend:
        steps:
            - restore_cache:
                keys:
                    - maven-v3-{{ checksum "kwetter_backend/pom.xml" }}
                    - maven-v3-

    restore_cache_angular:
        steps:
            - restore_cache:
                keys:
                    - node-v5-{{ checksum "kwetter_angular/package.json" }}
                    - node-v5-

    save_cache_backend:
        steps:
            - save_cache:
                paths:
                    - ~/.m2
                key: maven-v3-{{ checksum "kwetter_backend/pom.xml" }}

    save_cache_angular:
        steps:
            - save_cache:
                paths:
                    - kwetter_angular/node_modules
                key: node-v5-{{ checksum "kwetter_angular/package.json" }}

jobs:
    checkout:
        executor: python
        steps:
            - checkout   
            - persist_workspace_angular
            - persist_workspace_backend

    dependencies_backend:
        executor: java
        steps:
            - attach_workspace_all
            - restore_cache_backend
            - run:
                name: Maven Go-Offline
                command: cd $SOURCE_PATH && mvn dependency:go-offline
            - save_cache_backend
#             Dont persist dependencies they are loaded via the cache
    
    dependencies_frontend:
        executor: node
        steps:
            - attach_workspace_all
            - restore_cache_angular
            - run:
                name: Install dependencies
                command: cd $SOURCE_PATH && npm install
            - save_cache_angular
#             Dont persist dependencies they are loaded via the cache

    build_backend:
        executor: java
        steps:
            - attach_workspace_all
            - restore_cache_backend
            - run:
                name: Build Backend
                command: cd $SOURCE_PATH && mvn install -DskipTests              
            - persist_workspace_backend

    build_frontend:
        executor: node
        steps:
            - attach_workspace_all
            - restore_cache_angular
            - run:
                name: Build Frontend
                command: cd $SOURCE_PATH && npm run build           
            - persist_workspace_angular_dist

    test_backend:
        executor: java
        steps:
            - skip
#            - attach_workspace_all
#            - restore_cache_backend
#            - run:
#                name: Test Backend
#                command: cd $SOURCE_PATH && mvn test
#            - persist_workspace_backend_tests

    lint_frontend:
        executor: node
        steps:
            - skip
#            - attach_workspace_all
#            - restore_cache_angular
#            - run:
#                name: Linting
#                command: cd $SOURCE_PATH && npm run lint
#            - store_test_results:
#                path: test-results/lint_frontend

    test_frontend:
        executor: node
        steps:
            - skip
#             - attach_workspace_all
#             Disabled for testing purposes
#             - run:
#                 name: Testing
#                 command: cd $SOURCE_PATH && npm run test

    sonarqube:
        executor: java
        steps:
            - skip
#            - attach_workspace_all
#            - restore_cache_backend
#            - run:
#                command: |
#                    cd $SOURCE_PATH
#                    mvn sonar:sonar \
#                    -Dsonar.projectKey=kwetter \
#                    -Dsonar.organization=ronaldvandenbroek-github \
#                    -Dsonar.host.url=https://sonarcloud.io \
#                    -Dsonar.login=$SONAR_LOGIN

    docker_backend:
        machine: true
        environment:
            SOURCE_PATH: kwetter_backend
        steps:
            - attach_workspace:
                at: project
            - run_docker:
                user: "${DOCKER_USER}"
                pass: "${DOCKER_PASS}"
                source: "${SOURCE_PATH}"
                tag: "${CIRCLE_BRANCH}"

    docker_frontend:
        machine: true
        environment:
            SOURCE_PATH: kwetter_angular
        steps:
            - attach_workspace:
                at: project
            - run_docker:
                user: "${DOCKER_USER}"
                pass: "${DOCKER_PASS}"
                source: "${SOURCE_PATH}"
                tag: "${CIRCLE_BRANCH}"

    aws-deploy:
        executor: python
        steps:
            - attach_workspace:
                at: project
            - aws-cli/install
            - aws-cli/configure:
                profile-name: ${CIRCLE_PROFILE_NAME}
                aws-access-key-id: ${CIRCLE_ACCESS_KEY_ID}
                aws-secret-access-key: ${CIRCLE_SECRET_ACCESS_KEY}
                aws-region: eu-central-1
            - run:
                command: aws help
