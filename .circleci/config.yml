# Java Maven CircleCI 2.0 configuration file

version: 2.1

orbs:
  sonarqube: onehq/sonarqube@0.3.0
  
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:5.7

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
        
    steps:
      - checkout
      
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn test 
      
      - run:
          name: Install Sonarqube scanner
          command: >

            wget
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip

            unzip sonar-scanner-cli-3.2.0.1227-linux.zip
      - run:
          name: Run Sonarqube scanner
          command: >
            export SONAR_SCANNER_OPTS="-Xmx2048m"

            eval ./sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner
            -Dsonar.projectKey=kwetter-circleci \

            -Dsonar.sources=. \

            -Dsonar.sourceEncoding=US-ASCII \

            -Dsonar.exclusions=vendor/bundle/** \

            -Dsonar.host.url=https://sonarqube.onehq.com \

            -Dsonar.projectVersion=${CIRCLE_BRANCH} \

            -Dsonar.login=${SONARQUBE_TOKEN} $SONAR_SCANNER_OPTS_CUSTOM