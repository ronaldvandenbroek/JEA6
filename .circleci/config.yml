# Java Maven CircleCI 2.0 configuration file

version: 2.1
  
jobs:
    backend-tests:
        docker:
            - image: circleci/openjdk:8-jdk
        working_directory: ~/repo
        environment:
            MAVEN_OPTS: -Xmx3200m
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum ${KWETTER_BACKEND_LOCATION}"/pom.xml" }}
                    - v1-dependencies-
            - run:
                name: Maven Go-Offline
                command: cd ${KWETTER_BACKEND_LOCATION} && mvn dependency:go-offline
            - save_cache:
                paths:
                    - ~/.m2
                key: v1-dependencies-{{ checksum ${KWETTER_BACKEND_LOCATION}"/pom.xml" }}
            - run:
                name: Run Maven Tests
                command: cd ${KWETTER_BACKEND_LOCATION} && mvn test
            - run:
                name: Install Sonarqube scanner
                command: |
                    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
                    unzip sonar-scanner-cli-3.3.0.1492-linux.zip
            - run:
                name: Run Sonarqube scanner
                command: |
                    cd ${KWETTER_BACKEND_LOCATION}
                    export SONAR_SCANNER_OPTS="-Xmx2048m"
                    eval ./../sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner -Dsonar.projectKey=${KWETTER_BACKEND_LOCATION} \
                    -Dsonar.sources=. \
                    -Dsonar.sourceEncoding=US-ASCII \
                    -Dsonar.exclusions=vendor/bundle/** \
                    -Dsonar.host.url=${SONARQUBE_LOCATION} \
                    -Dsonar.projectVersion=${CIRCLE_BRANCH} \

    frontend-tests:    
        docker:
            - image: circleci/node:10.15.3
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                keys:
                - v1-dependencies-{{ checksum ${KWETTER_FRONTEND_LOCATION}"/package.json" }}
                - v1-dependencies-
            - run:
                name: Install local dependencies
                command: cd ${KWETTER_FRONTEND_LOCATION} && npm install
            - save_cache:
                key: v1-dependencies-{{ checksum ${KWETTER_FRONTEND_LOCATION}"/package.json" }}
                paths:
                    - node_modules
            #- run:
            #    name: Linting
            #    command: npm run lint
            #- run:
            #    name: Testing
            #    command: npm run test
            - run:
                name: Install Sonarqube scanner
                command: |
                    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
                    unzip sonar-scanner-cli-3.3.0.1492-linux.zip
            - run:
                name: Run Sonarqube scanner
                command: |
                    cd ${KWETTER_FRONTEND_LOCATION}
                    export SONAR_SCANNER_OPTS="-Xmx2048m"
                    eval ./../sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner -Dsonar.projectKey=${KWETTER_FRONTEND_LOCATION} \
                    -Dsonar.sources=. \
                    -Dsonar.sourceEncoding=US-ASCII \
                    -Dsonar.exclusions=vendor/bundle/** \
                    -Dsonar.host.url=${SONARQUBE_LOCATION} \
                    -Dsonar.projectVersion=${CIRCLE_BRANCH} \
            
workflows:
    version: 2.1
    backend-frontend:
        jobs:
            - frontend-tests:
                context: kwetter
            - backend-tests:
                context: kwetter